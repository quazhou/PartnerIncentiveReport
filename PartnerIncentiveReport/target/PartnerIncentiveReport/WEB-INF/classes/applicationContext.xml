<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	
	<context:annotation-config/>

	<!-- Bean declarations go here-->
	<context:component-scan base-package="com.cisco"></context:component-scan>
	
	
	
	<beans >
    	<bean id="firstaction" class="com.cisco.action.FirstAction" scope="prototype"/>
    	
    	<bean id="dataSourceMySQL"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/mydata"/>
		<property name="username" value="root"/>
		<property name="password" value="Hadoop123"/>
		</bean>
    	
    	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSourceMySQL"/>
        <property name="packagesToScan">
            <list>
                <value>com.cisco.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
            	<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hbm2ddl.auto">update</prop>
        	</props>

        </property>
    	</bean>
    	
    	<!-- <tx:annotation-driven transaction-manager="txManager"/> -->
    	 
		<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    		<property name="sessionFactory" ref="sessionFactory" />
		</bean>
    	
    	<!-- ensure that the above transactional advice runs for any execution
        of an operation defined by the FooService interface -->
    	<aop:config>
        	<aop:pointcut id="ServiceOperation" expression="execution(public * com.cisco.service..*.*(..))"/>
        	<aop:advisor advice-ref="txAdvice" pointcut-ref="ServiceOperation"/>
    	</aop:config>
    	
    	<!-- the transactional advice (what happens; see the <aop:advisor/> bean below) -->
    	<tx:advice id="txAdvice" transaction-manager="txManager">
        	<!-- the transactional semantics... -->
        	<tx:attributes>
            	<!-- all methods starting with get are read-only -->
            	 <tx:method name="getUser*" read-only="true"/> 
            	<!-- other methods starting with save use the default transaction settings (see below) -->
            	<tx:method name="save*" propagation="REQUIRED"/>
        	</tx:attributes>
    	</tx:advice>
    	
    	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    		<property name="sessionFactory" ref="sessionFactory"></property>
    	</bean>
    	
    	<bean id="logDaoImplSupport" class="com.cisco.dao.impl.LogDaoImplSupport">
    		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
    	</bean>
	</beans>
	
	
</beans>